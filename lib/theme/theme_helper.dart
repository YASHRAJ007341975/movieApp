import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

String _appTheme = "primary";

/// Helper class for managing themes and colors.
class ThemeHelper {
  // A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Changes the app theme to [_newTheme].
  void changeTheme(String _newTheme) {
    _appTheme = _newTheme;
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.black90007,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: colorScheme.onPrimaryContainer,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(20.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: Colors.transparent,
          side: BorderSide(
            color: appTheme.whiteA700,
            width: 3.h,
          ),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(23.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      floatingActionButtonTheme: FloatingActionButtonThemeData(
        backgroundColor: appTheme.blueGray100,
      ),
      dividerTheme: DividerThemeData(
        thickness: 2,
        space: 2,
        color: appTheme.whiteA70001,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyMedium: TextStyle(
          color: appTheme.whiteA70001,
          fontSize: 14.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.whiteA70001,
          fontSize: 12.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w400,
        ),
        displayLarge: TextStyle(
          color: appTheme.redA70001,
          fontSize: 64.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w700,
        ),
        displayMedium: TextStyle(
          color: appTheme.whiteA70001,
          fontSize: 42.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w700,
        ),
        displaySmall: TextStyle(
          color: appTheme.redA70005,
          fontSize: 35.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w700,
        ),
        headlineMedium: TextStyle(
          color: appTheme.whiteA70001,
          fontSize: 28.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w700,
        ),
        headlineSmall: TextStyle(
          color: appTheme.whiteA70001,
          fontSize: 25.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w700,
        ),
        labelLarge: TextStyle(
          color: appTheme.whiteA70001,
          fontSize: 12.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w700,
        ),
        labelMedium: TextStyle(
          color: appTheme.redA70012,
          fontSize: 11.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w700,
        ),
        titleLarge: TextStyle(
          color: appTheme.whiteA70001,
          fontSize: 20.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w700,
        ),
        titleMedium: TextStyle(
          color: appTheme.whiteA70001,
          fontSize: 17.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w700,
        ),
        titleSmall: TextStyle(
          color: appTheme.whiteA70001,
          fontSize: 15.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w700,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFFF40404),
    primaryContainer: Color(0XFF0C0909),
    secondary: Color(0XFF0C0909),
    secondaryContainer: Color(0XFFDF0909),
    tertiary: Color(0XFF0C0909),
    tertiaryContainer: Color(0XFFDF0909),

    // Background colors
    background: Color(0XFF0C0909),

    // Surface colors
    surface: Color(0XFF0C0909),
    surfaceTint: Color(0XFF030303),
    surfaceVariant: Color(0XFFDF0909),

    // Error colors
    error: Color(0XFF030303),
    errorContainer: Color(0XFF1E1E1E),
    onError: Color(0XFFFF0505),
    onErrorContainer: Color(0XFFD9BD2B),

    // On colors(text colors)
    onBackground: Color(0XFF645050),
    onInverseSurface: Color(0XFFFF0505),
    onPrimary: Color(0XFF030303),
    onPrimaryContainer: Color(0XFF645050),
    onSecondary: Color(0XFF645050),
    onSecondaryContainer: Color(0XFF030303),
    onTertiary: Color(0XFF645050),
    onTertiaryContainer: Color(0XFF030303),

    // Other colors
    outline: Color(0XFF030303),
    outlineVariant: Color(0XFF0C0909),
    scrim: Color(0XFF0C0909),
    shadow: Color(0XFF030303),

    // Inverse colors
    inversePrimary: Color(0XFF0C0909),
    inverseSurface: Color(0XFF030303),

    // Pending colors
    onSurface: Color(0XFF645050),
    onSurfaceVariant: Color(0XFF030303),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Black
  Color get black900 => Color(0XFF0D0D0D);
  Color get black90001 => Color(0XFF0E0E0E);
  Color get black90002 => Color(0XFF010101);
  Color get black90003 => Color(0XFF110F0F);
  Color get black90004 => Color(0XFF0C0C0C);
  Color get black90005 => Color(0XFF050505);
  Color get black90006 => Color(0XFF111010);
  Color get black90007 => Color(0XFF000000);

  // BlueGray
  Color get blueGray100 => Color(0XFFD9D9D9);
  Color get blueGray400 => Color(0XFF888888);

  // DeepOrange
  Color get deepOrangeA700 => Color(0XFFEA1313);
  Color get deepOrangeA70001 => Color(0XFFF31515);
  Color get deepOrangeA70002 => Color(0XFFF81717);

  // Gray
  Color get gray100 => Color(0XFFF4F1F1);
  Color get gray10001 => Color(0XFFF7F7F7);
  Color get gray200 => Color(0XFFF1ECEC);
  Color get gray50 => Color(0XFFF9F7F7);
  Color get gray5001 => Color(0XFFFFFBFB);
  Color get gray5002 => Color(0XFFFFF9F9);
  Color get gray700 => Color(0XFF666161);
  Color get gray800 => Color(0XFF663737);
  Color get gray900 => Color(0XFF191818);
  Color get gray90001 => Color(0XFF181717);
  Color get gray90002 => Color(0XFF171616);

  // Grayf
  Color get gray9007f => Color(0X7F1E1818);

  // Red
  Color get red300 => Color(0XFFE46767);
  Color get red600 => Color(0XFFF22020);
  Color get red700 => Color(0XFFE51E1E);
  Color get red70001 => Color(0XFFE42A2A);
  Color get red70002 => Color(0XFFDD2A2A);
  Color get redA700 => Color(0XFFFD0000);
  Color get redA70001 => Color(0XFFF40707);
  Color get redA70002 => Color(0XFFFF0909);
  Color get redA70003 => Color(0XFFF10E0E);
  Color get redA70004 => Color(0XFFFF0202);
  Color get redA70005 => Color(0XFFFB0000);
  Color get redA70006 => Color(0XFFF50B0B);
  Color get redA70007 => Color(0XFFFF0000);
  Color get redA70008 => Color(0XFFF20808);
  Color get redA70009 => Color(0XFFEA0B0B);
  Color get redA70010 => Color(0XFFEC0F0F);
  Color get redA70011 => Color(0XFFF90000);
  Color get redA70012 => Color(0XFFF11010);

  // White
  Color get whiteA700 => Color(0XFFFDFDFD);
  Color get whiteA70001 => Color(0XFFFFFFFF);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
